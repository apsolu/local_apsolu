{"version":3,"file":"table-mask.min.js","sources":["../src/table-mask.js"],"sourcesContent":["/*\n * Permet de masquer / afficher des colonnes des tables\n * Les tables doivent avoir une balise thead et tbody\n * Compatible avec jquery.tablesorter\n * Utilisation\n * - Encapsuler la table avec une balise ayant comme classe 'apsolu-mask-wrapper'\n * - Pour ne pas permettre de masquer une colonne, rajouter la classe 'no-mask' à la balise th\n * - Pour sauvegarder la configuration de la table et la partager dans le document,\n *   Rajouter l'attribut 'data-mask-name=\"<nom>\"' à la table et à la colonne\n */\n\ndefine(['jquery', \"local_apsolu/preference\", 'core/notification'], function($, UserRepository, Notification) {\n    return {\n        initialise: function(force) {\n            // If table mask was already initialized, return.\n            if(typeof apsolu_table_mask_preferences !== 'undefined' && !force) { return; }\n\n            var apsolu_table_mask_preferences = {};\n\n            let restoreHtml = '<a class=\"restore-columns btn btn-default btn-condensed\">'\n            + 'Colonnes cachées : cliquez ici pour les restaurer</a>';\n\n            $(\".apsolu-mask-wrapper > table\").before(restoreHtml);\n            $(\".apsolu-mask-wrapper > table\").after(restoreHtml);\n            $(\".restore-columns\").hide();\n\n            UserRepository.getUserPreferences('apsolu_maskable_config').then((value) => {\n                if(!value || !value.preferences[0].value) { return; }\n\n                apsolu_table_mask_preferences = JSON.parse(value.preferences[0].value);\n\n                $('.apsolu-mask-wrapper').each(function () {\n                    let $wrapper = $(this);\n                    let wrapperName = $wrapper.data(\"mask-name\");\n                    if(!wrapperName || !apsolu_table_mask_preferences[wrapperName]) { return; }\n\n                    apsolu_table_mask_preferences[wrapperName].forEach(function(columnName) {\n                        let $cell = $wrapper.find(\"th[data-mask-name=\" + columnName + \"]\");\n                        if($cell.length <= 0) { return; }\n\n                        let colIndex = $($cell[0]).data(\"column\");\n                        let useHeaderChildIndex = false;\n\n                        if(colIndex === undefined || colIndex === undefined) { // no tablesorter data\n                            colIndex = $cell[0].cellIndex;\n                            useHeaderChildIndex = true;\n                        }\n\n                        // find and hide col index\n                        $wrapper.find(\"tbody tr td:nth-child(\" + (colIndex + 1) + \")\").addClass('hide-col');\n\n                        // Hide the header\n                        if(useHeaderChildIndex) {\n                            $wrapper.find(\"thead tr th:nth-child(\" + (colIndex + 1) + \")\").addClass('hide-col');\n                        } else {\n                            $wrapper.find(\"thead tr th[data-column=\" + colIndex + \"]\").addClass('hide-col');\n                            $wrapper.find(\"thead tr td[data-column=\" + colIndex + \"]\").addClass('hide-col');\n                        }\n\n                        // show restore links\n                        $wrapper.find(\".restore-columns\").show();\n\n                    });\n\n                });\n\n            }).catch(Notification);\n            $('.apsolu-mask-wrapper thead th:not(\".no-mask\")').each(function() {\n                let content = $(this).html();\n                $(this).html(\"<div class='d-flex m-0 p-0'><div class='flex-grow-1'>\" + content + \"</div>\"\n                    + \"<div class='hide-column-container'>\"\n                    + \"<button class='btn btn-default btn-condensed hide-column p-0' title='Cacher la colonne'>\"\n                    + \"<i class='fa fa-eye-slash'></i></button></div></div>\");\n            });\n\n            $('.hide-column').click(function() {\n                let $cell = $(this).closest('th,td');\n                let $wrapper = $(this).closest('.apsolu-mask-wrapper');\n                let columnName = $cell.data(\"mask-name\");\n                let wrapperName = $wrapper.data(\"mask-name\");\n                if(wrapperName) {\n                    $wrapper = $('[data-mask-name=' + wrapperName + ']');\n                }\n\n                let colIndex = $($cell[0]).data(\"column\");\n\n                let useHeaderChildIndex = false;\n\n                if(colIndex === undefined || colIndex === undefined) { // no tablesorter data\n                    colIndex = $cell[0].cellIndex;\n                    useHeaderChildIndex = true;\n                }\n\n                // find and hide col index\n                $wrapper.find(\"tbody tr td:nth-child(\" + (colIndex + 1) + \")\").addClass('hide-col');\n\n                // Hide the header\n                if(useHeaderChildIndex){\n                    $wrapper.find(\"thead tr th:nth-child(\" + (colIndex + 1) + \")\").addClass('hide-col');\n                } else {\n                    $wrapper.find(\"thead tr th[data-column=\" + colIndex + \"]\").addClass('hide-col');\n                    $wrapper.find(\"thead tr td[data-column=\" + colIndex + \"]\").addClass('hide-col');\n                }\n\n\n                // show restore footer\n                $wrapper.find(\".restore-columns\").show();\n\n                if(columnName && wrapperName)\n                {\n                    // Add column to wrapper config and save\n                    if(!apsolu_table_mask_preferences[wrapperName]) { apsolu_table_mask_preferences[wrapperName] = []; }\n\n                    let index = apsolu_table_mask_preferences[wrapperName].indexOf(columnName);\n                    if(index < 0) { apsolu_table_mask_preferences[wrapperName].push(columnName); }\n                    UserRepository.setUserPreference('apsolu_maskable_config', JSON.stringify(apsolu_table_mask_preferences))\n                        .catch(Notification);\n                }\n\n                return false;\n            });\n\n            $(\".restore-columns\").click(function() {\n                let $wrapper = $(this).closest('.apsolu-mask-wrapper');\n                let wrapperName = $wrapper.data(\"mask-name\");\n                if(wrapperName) {\n                    $wrapper = $('[data-mask-name=' + wrapperName + ']');\n\n                    apsolu_table_mask_preferences[wrapperName] = [];\n                    UserRepository.setUserPreference('apsolu_maskable_config', JSON.stringify(apsolu_table_mask_preferences))\n                        .catch(Notification);\n                }\n                $wrapper.find(\".restore-columns\").hide();\n                $wrapper.find(\"th, td\").removeClass('hide-col');\n                return false;\n            });\n        }\n    };\n});\n"],"names":["define","$","UserRepository","Notification","initialise","force","apsolu_table_mask_preferences","restoreHtml","before","after","hide","getUserPreferences","then","value","preferences","JSON","parse","each","$wrapper","this","wrapperName","data","forEach","columnName","$cell","find","length","colIndex","useHeaderChildIndex","undefined","cellIndex","addClass","show","catch","content","html","click","closest","indexOf","push","setUserPreference","stringify","removeClass"],"mappings":"AAWAA,iCAAO,CAAC,SAAU,0BAA2B,sBAAsB,SAASC,EAAGC,eAAgBC,oBACpF,CACHC,WAAY,SAASC,eAE2B,IAAlCC,gCAAkDD,iBAExDC,8BAAgC,OAEhCC,YAAc,iHAGlBN,EAAE,gCAAgCO,OAAOD,aACzCN,EAAE,gCAAgCQ,MAAMF,aACxCN,EAAE,oBAAoBS,OAEtBR,eAAeS,mBAAmB,0BAA0BC,MAAMC,QAC1DA,OAAUA,MAAMC,YAAY,GAAGD,QAEnCP,8BAAgCS,KAAKC,MAAMH,MAAMC,YAAY,GAAGD,OAEhEZ,EAAE,wBAAwBgB,MAAK,eACvBC,SAAWjB,EAAEkB,MACbC,YAAcF,SAASG,KAAK,aAC5BD,aAAgBd,8BAA8Bc,cAElDd,8BAA8Bc,aAAaE,SAAQ,SAASC,gBACpDC,MAAQN,SAASO,KAAK,qBAAuBF,WAAa,QAC3DC,MAAME,QAAU,aAEfC,SAAW1B,EAAEuB,MAAM,IAAIH,KAAK,UAC5BO,qBAAsB,OAEVC,IAAbF,eAAuCE,IAAbF,WACzBA,SAAWH,MAAM,GAAGM,UACpBF,qBAAsB,GAI1BV,SAASO,KAAK,0BAA4BE,SAAW,GAAK,KAAKI,SAAS,YAGrEH,oBACCV,SAASO,KAAK,0BAA4BE,SAAW,GAAK,KAAKI,SAAS,aAExEb,SAASO,KAAK,2BAA6BE,SAAW,KAAKI,SAAS,YACpEb,SAASO,KAAK,2BAA6BE,SAAW,KAAKI,SAAS,aAIxEb,SAASO,KAAK,oBAAoBO,iBAM3CC,MAAM9B,cACTF,EAAE,iDAAiDgB,MAAK,eAChDiB,QAAUjC,EAAEkB,MAAMgB,OACtBlC,EAAEkB,MAAMgB,KAAK,wDAA0DD,QAA1D,4LAMjBjC,EAAE,gBAAgBmC,OAAM,eAChBZ,MAAQvB,EAAEkB,MAAMkB,QAAQ,SACxBnB,SAAWjB,EAAEkB,MAAMkB,QAAQ,wBAC3Bd,WAAaC,MAAMH,KAAK,aACxBD,YAAcF,SAASG,KAAK,aAC7BD,cACCF,SAAWjB,EAAE,mBAAqBmB,YAAc,UAGhDO,SAAW1B,EAAEuB,MAAM,IAAIH,KAAK,UAE5BO,qBAAsB,UAEVC,IAAbF,eAAuCE,IAAbF,WACzBA,SAAWH,MAAM,GAAGM,UACpBF,qBAAsB,GAI1BV,SAASO,KAAK,0BAA4BE,SAAW,GAAK,KAAKI,SAAS,YAGrEH,oBACCV,SAASO,KAAK,0BAA4BE,SAAW,GAAK,KAAKI,SAAS,aAExEb,SAASO,KAAK,2BAA6BE,SAAW,KAAKI,SAAS,YACpEb,SAASO,KAAK,2BAA6BE,SAAW,KAAKI,SAAS,aAKxEb,SAASO,KAAK,oBAAoBO,OAE/BT,YAAcH,YACjB,CAEQd,8BAA8Bc,eAAgBd,8BAA8Bc,aAAe,IAEnFd,8BAA8Bc,aAAakB,QAAQf,YACpD,GAAKjB,8BAA8Bc,aAAamB,KAAKhB,YAChErB,eAAesC,kBAAkB,yBAA0BzB,KAAK0B,UAAUnC,gCACrE2B,MAAM9B,qBAGR,KAGXF,EAAE,oBAAoBmC,OAAM,eACpBlB,SAAWjB,EAAEkB,MAAMkB,QAAQ,wBAC3BjB,YAAcF,SAASG,KAAK,oBAC7BD,cACCF,SAAWjB,EAAE,mBAAqBmB,YAAc,KAEhDd,8BAA8Bc,aAAe,GAC7ClB,eAAesC,kBAAkB,yBAA0BzB,KAAK0B,UAAUnC,gCACrE2B,MAAM9B,eAEfe,SAASO,KAAK,oBAAoBf,OAClCQ,SAASO,KAAK,UAAUiB,YAAY,aAC7B"}