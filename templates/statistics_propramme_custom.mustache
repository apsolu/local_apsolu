{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template local_apsolu/

    Template Moodle pour afficher

    Classes required for JS:
    * none

    Data attributes required for JS:
    * none

    Context variables required for this template:
    * langcode
    * Filters

    Example context (json):
    {
        "langcode": "fr",
        "Filters": "{}"
    }
}}
<div id="page_custom" style="min-height:600px;">
  <div id="querybuilder" style="display:block"></div>
  <div class="btn-group">
    <button class="btn btn-primary reset">{{# str }} statistics_clean, local_apsolu {{/ str }}</button>
    <button class="btn btn-primary parse-sql">{{# str }} statistics_apply, local_apsolu {{/ str }}</button>
  </div>

  <div class="report-builder-datatable" style="padding-top:20px;">
    <table class="display compact report-builder-table" style="width: 100%;"></table>
  </div>
</div>

{{#js}}
require([
  'jquery',
  'core/notification',
  "core/ajax",
  "local_apsolu/moment",
  'local_apsolu/query-builder',
  'local_apsolu/query-builder.fr',
  "local_apsolu/datatables.net",
  "local_apsolu/datatables.net-buttons",
  "local_apsolu/datatables.net-bs4",
  "buttons.bootstrap4",
  "buttons.html5",
  "buttons.colVis",
  "bootstrap-datepicker",
  "bootstrap-datetimepicker",
  "moment",
  ], function($,notification,Ajax,moment) {

  moment.locale('{{{langcode}}}');

  !function(a){a.fn.datepicker.dates.fr={
      days:["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"],
      daysShort:["dim.","lun.","mar.","mer.","jeu.","ven.","sam."],
      daysMin:["d","l","ma","me","j","v","s"],
      months:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],
      monthsShort:["janv.","févr.","mars","avril","mai","juin","juil.","août","sept.","oct.","nov.","déc."],
      today:"Aujourd'hui",
      monthsTitle:"Mois",clear:"Effacer",weekStart:1,format:"dd/mm/yyyy"}}(jQuery);

  var selector = '.report-builder-table';

  var builder = $('#querybuilder').queryBuilder({
    sort_filters: true,
    filters: {{{Filters}}},
    lang_code: '{{{langcode}}}',
  });

  $('.reset').on('click', function() {
    builder.queryBuilder('reset');

    // Destroy results table
    if ( $.fn.dataTable.isDataTable( selector ) ) {
      table = $(selector).DataTable();
      table.destroy();
      $(selector).empty();
    }
  });

  $('.parse-sql').on('click', function() {
    var requests = [];
    var customQuery = builder.queryBuilder('getSQL', 'question_mark');

    // Destroy results table
    if ( $.fn.dataTable.isDataTable( selector ) ) {
      table = $(selector).DataTable();
      table.destroy();
      $(selector).empty();
    }

    if (customQuery !== null && customQuery.sql.length) {
        customQuery.datatype = "1"; // default

        // Get enrols data
        var requests = Ajax.call([{
                methodname: 'local_apsolu_get_reportdataset',
                args: {'classname':'programme','querybuilder':JSON.stringify(customQuery)}
              }]);

        requests[0].done(function(enrols) {
          // Get ordering
          var json_order = JSON.parse(enrols.orders);
          var order = [];
          for(var i in json_order)
              order.push([i, json_order[i]]);

          // Build results table
          var options = {
            data : JSON.parse(enrols.data),
            columns: JSON.parse(enrols.columns, function (key, value) {
                if (value && (typeof value === 'string') && value.indexOf("function") === 0) {
                    eval("var jsFunc = " + value);
                    return jsFunc;
                }
                return value;
            }),
            order: order,
            buttons: ['csvHtml5'],
            dom: '<"top"Bfi>rt<"bottom"lp><"clear">', //'dom': 'lfrtip',
            pageLength:30,
            language: {
                      "sEmptyTable":     "Aucune donnée disponible dans le tableau",
                      "sInfo":           "Affichage de l'élément _START_ à _END_ sur _TOTAL_ éléments",
                      "sInfoEmpty":      "Affichage de l'élément 0 à 0 sur 0 élément",
                      "sInfoFiltered":   "(filtré à partir de _MAX_ éléments au total)",
                      "sInfoPostFix":    "",
                      "sInfoThousands":  ",",
                      "sLengthMenu":     "Afficher _MENU_ éléments",
                      "sLoadingRecords": "Chargement...",
                      "sProcessing":     "Traitement...",
                      "sSearch":         "Rechercher :",
                      "sZeroRecords":    "Aucun élément correspondant trouvé",
                      "oPaginate": {
                          "sFirst":    "Premier",
                          "sLast":     "Dernier",
                          "sNext":     "Suivant",
                          "sPrevious": "Précédent"
                      },
                      "oAria": {
                          "sSortAscending":  ": activer pour trier la colonne par ordre croissant",
                          "sSortDescending": ": activer pour trier la colonne par ordre décroissant"
                      },
                      "select": {
                              "rows": {
                                  "_": "%d lignes sélectionnées",
                                  "0": "Aucune ligne sélectionnée",
                                  "1": "1 ligne sélectionnée"
                              }
                      }
                    },
            initComplete: function(settings, json) {

              // Build columns filters
              if (enrols.filters) {
                var filters = JSON.parse(enrols.filters);

                $(selector+' thead tr').clone(false).appendTo( selector+' thead' );
                $(selector+' thead tr:eq(1) th').removeAttr('class').html('');

                if (filters.input) {
                  this.api().columns(filters.input).every( function () {
                    var column = this;
                    if (column.visible()) {

                      var title = $(column.header()).html();
                      var input = $('<input type="text" class="column_search" placeholder=" '+title+'" />')
                          .appendTo( $(selector+' thead tr:eq(1) th').eq(column.index()).empty() )
                          .on( 'keyup change', function () {
                              var val = $.fn.dataTable.util.escapeRegex(
                                  $(this).val()
                              );
                              column
                                      .search(val)
                                      .draw();
                          } );
                    }
                  });
                }
                if (filters.select) {
                  this.api().columns(filters.select).every( function () {
                    var column = this;
                    if (column.visible()) {
                      var select = $('<select><option value=""></option></select>')
                          .appendTo( $(selector+' thead tr:eq(1) th').eq(column.index()).empty() )
                          .on( 'change', function () {
                              var val = $.fn.dataTable.util.escapeRegex(
                                  $(this).val()
                              );

                              column
                                  .search( val ? '^'+val+'$' : '', true, false )
                                  .draw();
                          } );

                      column.data().unique().sort().each( function ( d, j ) {
                        var title = $(column.header()).html();
                        if (title != "Jour")
                        {
                          select.append( '<option value="'+d+'">'+d+'</option>' )
                        } else {
                          select.append( '<option value="'+moment.weekdays()[d]+'">'+moment.weekdays()[d]+'</option>' )
                        }
                      });
                    }
                  });
                }
              }

            },


          };

          var table = $(selector).DataTable(options);
          table.unique(); // Remove doublons


        }).fail(notification.exception);

    }

  });

});
{{/js}}
