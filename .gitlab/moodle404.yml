---
# yamllint disable rule:line-length

variables:
  # Configuration de Moodle.
  MOODLE_REPOSITORY: https://github.com/moodle/moodle.git
  MOODLE_BRANCH: MOODLE_404_STABLE
  MARIADB_VERSION: 10.11
  NODE_VERSION: 22.11.0
  SELENIUM_VERSION: 3
  # Configuration des autorisations d'échecs des tests.
  ALLOW_FAILURE_BEHAT: "false"
  ALLOW_FAILURE_GRUNT: "false"
  ALLOW_FAILURE_MUSTACHE: "false"
  ALLOW_FAILURE_PHPCPD: "false"
  ALLOW_FAILURE_PHPCS: "false"
  ALLOW_FAILURE_PHPDOC: "false"
  ALLOW_FAILURE_PHPLINT: "false"
  ALLOW_FAILURE_PHPMD: "false"
  ALLOW_FAILURE_PHPUNIT: "false"
  ALLOW_FAILURE_SAVEPOINTS: "false"
  ALLOW_FAILURE_VALIDATE: "false"
  # Configuration des tests à réaliser.
  ENABLE_BEHAT: "false"  # Non implémenté.
  ENABLE_GRUNT: "true"
  ENABLE_MUSTACHE: "true"
  ENABLE_PHPCPD: "true"
  ENABLE_PHPCS: "true"
  ENABLE_PHPDOC: "true"
  ENABLE_PHPLINT: "true"
  ENABLE_PHPMD: "true"
  ENABLE_PHPUNIT: "true"
  ENABLE_SAVEPOINTS: "true"
  ENABLE_VALIDATE: "true"
  # Configuration d'un éventuel proxy http.
  HTTP_PROXY:
  HTTPS_PROXY:
  NO_PROXY:
  # Configuration d'éventuels miroirs Debian personnalisés.
  BULLSEYE_DEBIAN_MIRRORS:

# Définit des stages.
#   - chaque stage sont exécutés dans l'ordre.
#   - si un stage contient plusieurs jobs, ils sont executés en parallèle.
#   - si un job d'un stage plante, le processus d'intégration est arrêté.
stages:
  - validations
  - analyses
  - tests

default:
  # Récupère une image slim de Debian 12.
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/debian:bookworm-slim

  # Cette partie n'est jamais effacée et est réutilisée entre différentes exécutions de pipeline.
  cache:
    key: cache-$MOODLE_BRANCH
    paths:
      - $CI_PROJECT_DIR/.cache/apt
      - $CI_PROJECT_DIR/.cache/composer
      - $CI_PROJECT_DIR/.cache/datamoodle
      - $CI_PROJECT_DIR/.cache/moodle
      - $CI_PROJECT_DIR/.cache/moodle-plugin-ci
      - $CI_PROJECT_DIR/.cache/npm
      - $CI_PROJECT_DIR/.cache/nvm
      - $CI_PROJECT_DIR/.cache/sqldump
    policy: pull-push

  # Commandes lancées avant chaque job.
  before_script:
    # Définit les variables.
    - CACHE_APT="$CI_PROJECT_DIR/.cache/apt"
    - CACHE_MOODLE="$CI_PROJECT_DIR/.cache/moodle/$MOODLE_BRANCH"
    - CACHE_MOODLE_DATA="$CI_PROJECT_DIR/.cache/datamoodle/moodle-$MOODLE_BRANCH"
    - CACHE_MOODLE_DATA_PHPUNIT="$CI_PROJECT_DIR/.cache/datamoodle/phpunit-$MOODLE_BRANCH"
    - CACHE_MOODLE_PLUGIN_CI="$CI_PROJECT_DIR/.cache/moodle-plugin-ci"
    - CACHE_MOODLE_PLUGINS="$CI_PROJECT_DIR/.cache/moodle-plugins"
    - CACHE_NVM="$CI_PROJECT_DIR/.cache/nvm"
    - CACHE_SQLDUMP_PHPUNIT="$CI_PROJECT_DIR/.cache/sqldump/phpunit-$MOODLE_BRANCH.sql.zst"
    - WWWMOODLE_PATH="/var/www/html/moodle"
    - PLUGIN_PATH="$WWWMOODLE_PATH/$MOODLE_PLUGIN_INSTALL_PATH"

    # Définit les variables d'environnement.
    - export COMPOSER_HOME="$CI_PROJECT_DIR/.cache/composer"
    - export npm_config_cache="$CI_PROJECT_DIR/.cache/npm"
    - export NVM_DIR="$CI_PROJECT_DIR/.cache/nvm"
    - export PATH="$CI_PROJECT_DIR/.cache/moodle-plugin-ci/bin:/usr/local/nvm/versions/node/v$NODE_VERSION/bin:$PATH"

    # Définit les variables pour le proxy.
    - export http_proxy=$HTTP_PROXY
    - export https_proxy=$HTTPS_PROXY
    - export no_proxy=$NO_PROXY

    # Utilise des mirroirs debian spécifiques si la variable BULLSEYE_DEBIAN_MIRRORS n'est pas vide.
    - test -z "$BULLSEYE_DEBIAN_MIRRORS" || echo "$BULLSEYE_DEBIAN_MIRRORS" > /etc/apt/sources.list

    # Prépare le cache pour APT.
    - mkdir -p "$CI_PROJECT_DIR/.cache/apt"
    - rm -rf /var/cache/apt
    - ln -s "$CI_PROJECT_DIR/.cache/apt" /var/cache/apt
    - export apt_options="-y -qq -o Dir::Cache::Archives=$CI_PROJECT_DIR/.cache/apt"

    # Met à jour l'OS.
    - apt $apt_options update 1> /dev/null
    - apt $apt_options upgrade 1> /dev/null

    # Affiche la distribution.
    # TODO: - lsb_release -a

    # Installe les paquets nécessaires à l'application.
    - apt $apt_options install curl git rsync zstd 1> /dev/null

    # Installe toutes les locales (dont en_AU.UTF-8)
    - apt $apt_options install locales-all 1> /dev/null

    # Installe les paquets PHP.
    - apt $apt_options install composer 1> /dev/null
    - apt $apt_options install php-bcmath php-cli php-curl php-gd php-gmp php-intl php-json php-mbstring php-mysql php-xml php-xmlrpc php-zip 1> /dev/null
    - echo "max_input_vars = 5000" > /etc/php/8.2/cli/conf.d/99-applis.ini

    # Installe moodle-plugin-ci.
    - test -d "$CACHE_MOODLE_PLUGIN_CI" || git clone https://github.com/moodlehq/moodle-plugin-ci/ "$CACHE_MOODLE_PLUGIN_CI"
    - git -C "$CACHE_MOODLE_PLUGIN_CI" pull --ff-only origin main
    - composer --working-dir="$CACHE_MOODLE_PLUGIN_CI" --no-scripts install

    # Déploie moodle.
    - mkdir -p "$CACHE_MOODLE_DATA" "$CACHE_MOODLE_DATA_PHPUNIT" "$CACHE_MOODLE_PLUGINS" "$(dirname $CACHE_SQLDUMP_PHPUNIT)" "$WWWMOODLE_PATH"
    - test -d "$CACHE_MOODLE" || git clone "$MOODLE_REPOSITORY" --single-branch --branch "$MOODLE_BRANCH" "$CACHE_MOODLE"
    - git -C "$CACHE_MOODLE" pull --ff-only origin "$MOODLE_BRANCH"
    - rsync -a "$CACHE_MOODLE/" "$WWWMOODLE_PATH"
    - mkdir -p "$WWWMOODLE_PATH/$MOODLE_PLUGIN_INSTALL_PATH"
    - tar -c --exclude .cache . | tar -x -C "$WWWMOODLE_PATH/$MOODLE_PLUGIN_INSTALL_PATH"
    - |+
      for repository in $MOODLE_EXTRA_PLUGINS
      do
        repo=$(echo "$repository" | cut -d ";" -f 1)
        dir=$(echo "$repository" | cut -d ";" -f 2)
        test -d "$CACHE_MOODLE_PLUGINS/$dir" || git clone "$repo" "$CACHE_MOODLE_PLUGINS/$dir"
        rsync -a "$CACHE_MOODLE_PLUGINS/$dir/" "$WWWMOODLE_PATH/$dir"
      done
    - cp "$WWWMOODLE_PATH/config-dist.php" "$WWWMOODLE_PATH/config.php"
    - sed -i "s#^\$CFG->dbtype    = 'pgsql';#\$CFG->dbtype = 'mariadb';#" "$WWWMOODLE_PATH/config.php"
    - sed -i "s#^\$CFG->dbhost    = 'localhost';#\$CFG->dbhost = 'docker-mariadb';#" "$WWWMOODLE_PATH/config.php"
    - sed -i "s#^\$CFG->dbuser    = 'username';#\$CFG->dbuser = 'root';#" "$WWWMOODLE_PATH/config.php"
    - sed -i "s#^\$CFG->dbpass    = 'password';#\$CFG->dbpass = '';#" "$WWWMOODLE_PATH/config.php"
    - sed -i "s#\$CFG->wwwroot   = 'http://example.com/moodle';#\$CFG->wwwroot = 'http://$HOSTNAME';#" "$WWWMOODLE_PATH/config.php"
    - sed -i "s#\$CFG->dataroot  = '/home/example/moodledata';#\$CFG->dataroot = '$CACHE_MOODLE_DATA';#" "$WWWMOODLE_PATH/config.php"
    - sed -i "s#// \$CFG->phpunit_prefix = 'phpu_';#\$CFG->phpunit_prefix = 'phpu_';#" "$WWWMOODLE_PATH/config.php"
    - sed -i "s#// \$CFG->phpunit_dataroot = '/home/example/phpu_moodledata';#\$CFG->phpunit_dataroot = '$CACHE_MOODLE_DATA_PHPUNIT';#" "$WWWMOODLE_PATH/config.php"
    - composer --working-dir="$WWWMOODLE_PATH" install

include:
  - local: "/.gitlab/jobs.yml"
